---
import type { CollectionEntry } from "astro:content";
import BaseLayout from "./BaseLayout.astro";
import FormattedDate from "../ui/FormattedDate.astro";

type Props = CollectionEntry<"blog">["data"];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<BaseLayout title={title} description={description} image={heroImage}>
  <div class="w-full max-w-6xl mx-auto mt-8 md:mt-16 mb-24 px-4 md:px-8">
    <!-- Hero Section -->
    <div class="mb-8 text-center">
      <div class="mb-3 text-zinc-400 text-sm">
        <FormattedDate date={pubDate} />
        {
          updatedDate && (
            <span class="italic ml-2">
              (Updated: <FormattedDate date={updatedDate} />)
            </span>
          )
        }
      </div>

      <h1
        class="text-[#FFFFFF] text-4xl md:text-5xl xl:text-6xl font-bold opacity-90 antialiased tracking-tight mb-6 bg-clip-text text-transparent bg-gradient-to-r from-white to-zinc-300"
      >
        {title}
      </h1>

      <p class="text-zinc-300 mt-3 max-w-2xl mx-auto text-lg opacity-80">
        {description}
      </p>
    </div>

    <!-- Hero Image -->
    {
      heroImage && (
        <div class="relative mb-12 rounded-xl overflow-hidden shadow-2xl">
          <div class="aspect-video">
            <img
              src={heroImage}
              alt={title}
              class="w-full h-full object-cover"
            />
          </div>
          <div class="absolute inset-0 bg-gradient-to-t from-black/30 to-transparent" />
        </div>
      )
    }

    <!-- Content - Using a div with custom styling instead of BaseCard -->
    <div class="blog-content-container mb-6">
      <div class="prose p-8 md:p-12">
        <slot />
      </div>
    </div>

    <!-- Back to Blog -->
    <div class="text-center mt-8">
      <a
        href="/blog"
        class="inline-flex items-center px-6 py-2.5 rounded-full bg-black/30 border border-zinc-700/30 text-zinc-300 hover:bg-black/40 hover:border-zinc-500/40 hover:text-white transition-all duration-300 backdrop-blur-sm shadow-lg hover:shadow-blue-500/10"
      >
        <svg
          xmlns="https://www.w3.org/2000/svg"
          class="h-4 w-4 mr-2"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
        </svg>
        Back to Blog
      </a>
    </div>
  </div>
</BaseLayout>
<style>
  /* Enhanced glassmorphic blog content container */
  .blog-content-container {
    position: relative;
    background-color: rgba(12, 12, 14, 0.2);
    padding: 0;
    border-radius: 1.5rem;
    border: 1px solid rgba(255, 255, 255, 0.08);
    overflow: hidden;
    backdrop-filter: blur(16px);
    box-shadow:
      0 8px 32px rgba(0, 0, 0, 0.2),
      inset 0 0 0 1px rgba(255, 255, 255, 0.05);
    animation: fadeIn 0.6s ease-out forwards;
  }
</style>

<style is:global>
  .prose {
    color: #e4e4e7;
    max-width: 100%; /* Allow prose to use full width */
  }

  .prose p {
    margin: 1.5em 0;
    line-height: 1.8;
    font-size: 1.05rem;
    opacity: 0.9;
    letter-spacing: 0.01em;
  }

  .prose h2 {
    color: #ffffff;
    margin: 2em 0 0.5em 0;
    font-size: 1.8rem;
    font-weight: 600;
    position: relative;
    padding-bottom: 0.5rem;
  }

  .prose h2::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 40px;
    height: 3px;
    background: linear-gradient(
      90deg,
      rgba(113, 113, 122, 0.8),
      rgba(113, 113, 122, 0.2)
    );
    border-radius: 3px;
  }

  .prose h3 {
    color: #ffffff;
    margin: 1.5em 0 0.5em 0;
    font-size: 1.4rem;
    font-weight: 600;
  }

  .prose ul,
  .prose ol {
    margin: 1em 0;
    padding-left: 2em;
  }

  .prose li {
    margin: 0.5em 0;
    opacity: 0.9;
  }

  .prose a {
    color: #60a5fa;
    text-decoration: none;
    transition: all 0.2s;
    border-bottom: 1px dotted rgba(96, 165, 250, 0.4);
    position: relative;
    z-index: 1;
  }

  .prose a:hover {
    border-bottom: 1px solid rgba(96, 165, 250, 0.8);
    color: #93c5fd;
  }

  .prose a::before {
    content: "";
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 100%;
    height: 0;
    background-color: rgba(96, 165, 250, 0.1);
    transition: height 0.2s ease-out;
    z-index: -1;
    border-radius: 4px;
  }

  .prose a:hover::before {
    height: calc(100% + 4px);
  }

  .prose code {
    font-family: monospace;
    background-color: rgba(63, 63, 70, 0.4);
    padding: 0.2em 0.4em;
    border-radius: 0.25em;
    font-size: 0.9em;
  }

  .prose pre {
    background-color: rgba(24, 24, 27, 0.6);
    padding: 1em;
    border-radius: 0.5em;
    overflow-x: auto;
    border: 1px solid rgba(82, 82, 91, 0.3);
    margin: 1.5em 0;
  }

  .prose pre code {
    background-color: transparent;
    padding: 0;
  }

  .prose blockquote {
    border-left: 4px solid #60a5fa;
    padding: 0.5em 0 0.5em 1em;
    margin: 1.5em 0;
    color: #a1a1aa;
    font-style: italic;
    background-color: rgba(63, 63, 70, 0.2);
    border-radius: 0 0.25em 0.25em 0;
  }

  .prose img {
    max-width: 100%;
    height: auto;
    border-radius: 0.5em;
    margin: 1.5em 0;
    border: 1px solid rgba(82, 82, 91, 0.3);
  }

  .prose table {
    width: 100%;
    border-collapse: collapse;
    margin: 1.5em 0;
    background-color: rgba(24, 24, 27, 0.4);
    border-radius: 0.5em;
    overflow: hidden;
  }

  .prose th,
  .prose td {
    padding: 0.75em;
    border: 1px solid rgba(82, 82, 91, 0.3);
    text-align: left;
  }

  .prose th {
    background-color: rgba(63, 63, 70, 0.4);
    font-weight: 600;
    color: white;
  }

  .prose tr:nth-child(even) {
    background-color: rgba(63, 63, 70, 0.1);
  }

  /* Enhanced glassmorphic styling for code blocks */
  .prose pre {
    background-color: rgba(15, 15, 20, 0.5);
    border: 1px solid rgba(255, 255, 255, 0.08);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
    backdrop-filter: blur(10px);
  }

  /* Adding a subtle glow effect for blockquotes */
  .prose blockquote {
    box-shadow: 0 0 15px rgba(96, 165, 250, 0.1);
  }

  /* Adding a subtle hover animation for images */
  .prose img {
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
  }

  .prose img:hover {
    transform: scale(1.01);
    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
  }

  /* Adding a glass-like scrollbar */
  .prose pre::-webkit-scrollbar {
    height: 8px;
  }

  .prose pre::-webkit-scrollbar-track {
    background: rgba(24, 24, 27, 0.2);
    border-radius: 4px;
  }

  .prose pre::-webkit-scrollbar-thumb {
    background: rgba(113, 113, 122, 0.3);
    border-radius: 4px;
  }

  .prose pre::-webkit-scrollbar-thumb:hover {
    background: rgba(113, 113, 122, 0.5);
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
