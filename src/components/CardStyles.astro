---
// src/components/CardStyles.astro
---

<style is:global>
  /* Fix for the left column positioning */
  @media (min-width: 1024px) {
    .lg\:fixed {
      position: fixed;
      top: 0;
      left: 0;
      right: auto;
      width: 50%;
      height: 100vh;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }

    .lg\:ml-auto {
      margin-left: 40%;
    }
  }

  /* Hover card effect with refined shine effect */
  .hover-card {
    position: relative;
    background-color: rgba(0, 0, 0, 0.15);
    padding: 1.5rem;
    border-radius: 1.5rem;
    border: 1px solid rgba(82, 82, 91, 0.1);
    transition:
      transform 0.4s ease,
      background-color 0.4s ease,
      border 0.4s ease,
      box-shadow 0.4s ease;
    overflow: hidden;
    backdrop-filter: blur(10px);
  }

  .hover-card::before,
  .hover-card::after {
    content: "";
    position: absolute;
    inset: 0;
    border-radius: 1.5rem;
    pointer-events: none;
    z-index: 1;
    transition: opacity 0.4s ease;
    opacity: 0;
  }

  /* Subtle gradient following cursor */
  .hover-card::before {
    background: radial-gradient(
      circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
      rgba(255, 255, 255, 0.03) 0%,
      transparent 60%
    );
  }

  /* Border glow effect */
  .hover-card::after {
    content: "";
    position: absolute;
    inset: -1px;
    border-radius: 1.5rem;
    padding: 1px;
    background: linear-gradient(
      to bottom right,
      rgba(255, 255, 255, 0.2),
      rgba(113, 113, 122, 0.1),
      rgba(82, 82, 91, 0.3)
    );
    -webkit-mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    opacity: 0;
    transition: opacity 0.4s ease;
  }

  .hover-card:hover {
    background-color: rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(10px);
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.3);
    border-color: rgba(113, 113, 122, 0.3);
  }

  .hover-card:hover::before {
    opacity: 1;
  }

  .hover-card:hover::after {
    opacity: 1;
  }

  .hover-card > * {
    position: relative;
    z-index: 2;
  }

  .project-link {
    display: inline-flex;
    align-items: center;
    padding: 0.5rem 1rem;
    color: #d4d4d8;
    opacity: 0.8;
    background-color: rgba(0, 0, 0, 0.25);
    text-decoration: none;
    border-radius: 8px;
    transition: all 0.2s;
    border: 1px solid rgba(113, 113, 122, 0.3);
  }

  .project-link:hover {
    opacity: 0.9;
    background-color: rgba(113, 113, 122, 0.15);
    text-shadow: 0 0 1px rgba(255, 255, 255, 0.1);
    transform: translateY(-2px);
  }

  .project-card {
    transition: transform 0.3s ease;
  }
</style>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const cards = document.querySelectorAll<HTMLElement>(".hover-card");

    const handleMouseMove = (event: MouseEvent, card: HTMLElement) => {
      const rect = card.getBoundingClientRect();
      const x = ((event.clientX - rect.left) / rect.width) * 100;
      const y = ((event.clientY - rect.top) / rect.height) * 100;

      card.style.setProperty("--mouse-x", `${x}%`);
      card.style.setProperty("--mouse-y", `${y}%`);
    };

    const handleMouseLeave = (card: HTMLElement) => {
      card.style.transition = "all 0.6s cubic-bezier(0.19, 1, 0.22, 1)";

      setTimeout(() => {
        card.style.transition =
          "transform 0.4s ease, background-color 0.4s ease, border 0.4s ease, box-shadow 0.4s ease";
      }, 600);
    };

    cards.forEach((card) => {
      card.addEventListener("mousemove", (e) => handleMouseMove(e, card));
      card.addEventListener("mouseleave", () => handleMouseLeave(card));
    });
  });
</script>
